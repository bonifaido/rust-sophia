/* automatically generated by rust-bindgen */

#[link(name = "sophia")]
extern "C" {
    pub fn sp_env() -> *mut ::libc::c_void;
    pub fn sp_ctl(arg1: *mut ::libc::c_void, ...) -> *mut ::libc::c_void;
    pub fn sp_object(arg1: *mut ::libc::c_void, ...) -> *mut ::libc::c_void;
    pub fn sp_open(arg1: *mut ::libc::c_void, ...) -> ::libc::c_int;
    pub fn sp_destroy(arg1: *mut ::libc::c_void, ...) -> ::libc::c_int;
    pub fn sp_error(arg1: *mut ::libc::c_void, ...) -> ::libc::c_int;
    pub fn sp_set(arg1: *mut ::libc::c_void, ...) -> ::libc::c_int;
    pub fn sp_get(arg1: *mut ::libc::c_void, ...) -> *mut ::libc::c_void;
    pub fn sp_delete(arg1: *mut ::libc::c_void, ...) -> ::libc::c_int;
    pub fn sp_drop(arg1: *mut ::libc::c_void, ...) -> ::libc::c_int;
    pub fn sp_begin(arg1: *mut ::libc::c_void, ...) -> *mut ::libc::c_void;
    pub fn sp_prepare(arg1: *mut ::libc::c_void, ...) -> ::libc::c_int;
    pub fn sp_commit(arg1: *mut ::libc::c_void, ...) -> ::libc::c_int;
    pub fn sp_cursor(arg1: *mut ::libc::c_void, ...) -> *mut ::libc::c_void;
    pub fn sp_type(arg1: *mut ::libc::c_void, ...) -> *mut ::libc::c_void;
}
